name: Pull Request

on: [pull_request]

jobs:
  linux_build:
    name: 'Linux Build'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - name: Setup Commands
      run: chmod +x ./scripts/download-latest.sh
    - name: Configure Nuget
      run: sed -i 's/GITHUB_TOKEN/${{ secrets.GITHUB_TOKEN }}/g' nuget.config
    - name: DotNet Info
      run: dotnet --info
    - name: DotNet Nuget Version
      run: dotnet nuget --version
    - name: DotNet Nuget Locals Ingo
      run: dotnet nuget locals all --list
    - name: Build
      run: dotnet build -c Release
    - name: Test
      if: false # Disabled
      run: dotnet test -c Release
    - name: Package
      run: dotnet pack -c Release
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Linux-Release
        path: src/ElectionGuard/bin/Release
    - name: Upload Linux intermediate artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Linux-Intermediates
        path: src/ElectionGuard/obj/Release
  windows_build:
    name: 'Windows Build'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: 'windows-latest'
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - name: Configure Nuget
      run: ((Get-Content -path nuget.config -Raw) -replace 'GITHUB_TOKEN','${{ secrets.GITHUB_TOKEN }}') | Set-Content -Path nuget.config
    - name: DotNet Info
      run: dotnet --info
    - name: DotNet Nuget Version
      run: dotnet nuget --version
    - name: DotNet Nuget Locals Ingo
      run: dotnet nuget locals all --list
    - name: Build
      run: dotnet build -c Release
    - name: Test
      if:
      run: dotnet test -c Release
    - name: Package
      run: dotnet pack -c Release
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Windows-Release
        path: src/ElectionGuard/bin/Release
    - name: Upload Windows intermediate artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Windows-Intermediates
        path: src/ElectionGuard/obj/Release
  macos_build:
    name: 'MacOS Build'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: 'macOS-latest'
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - name: Upgrade dotnet core sdk
      run: brew cask install dotnet-sdk
    - name: Setup Commands
      run: chmod +x ./scripts/download-latest.sh
    - name: Configure Nuget
      run: sed -i '' 's/GITHUB_TOKEN/${{ secrets.GITHUB_TOKEN }}/' nuget.config
    - name: DotNet Info
      run: dotnet --info
    - name: DotNet Nuget Version
      run: dotnet nuget --version
    - name: DotNet Nuget Locals Ingo
      run: dotnet nuget locals all --list
    - name: Build
      run: dotnet build -c Release
    - name: Test
      if: false # Disabled
      run: dotnet test -c Release
    - name: Package
      run: dotnet pack -c Release
    - name: Upload MacOS artifacts
      uses: actions/upload-artifact@v1
      with:
        name: MacOS-Release
        path: src/ElectionGuard/bin/Release
    - name: Upload MacOS intermediate artifacts
      uses: actions/upload-artifact@v1
      with:
        name: MacOS-Intermediates
        path: src/ElectionGuard/obj/Release